#let day_name = "<%= @day_name %>"
#let full_date = "<%= @full_date %>"
#let part_of_day = "<%= @part_of_day %>"
#let season = "<%= @season %>"
#let generated_at = "<%= @generated_at %>"

#let page_width = 600pt
#set page(width: page_width, height: 800pt, margin: 5pt)

#set text(weight: "bold", font: "DeJavu Sans")

#set align(center)

#let grow_text_to_fit(body, max) = context {
    let measured_width = measure(body).width
    let maximum_width = (max - 250pt).cm()
    let font_size = text.size

    while measured_width.cm() < maximum_width {
        font_size += 0.1pt
        measured_width = measure(text(size: font_size)[#body]).width
    }

    text(size: font_size)[#body]
}

#set par(spacing: 30pt)

#v(20pt)

#grow_text_to_fit([#day_name], page_width)

#grow_text_to_fit([#full_date], page_width)

#grow_text_to_fit([#part_of_day], page_width)

#grow_text_to_fit([#season], page_width)

#set align(right + bottom)

#let today(content) = table.cell(text(content, fill: luma(100%), size: 22pt), fill: luma(0%))
#let weekday(content) = table.cell(text(content, fill: luma(0%)), fill: luma(85%))
#let weekend(content) = table.cell(text(content, fill: luma(0%)), fill: luma(75%))
#let other_weekday(content) = table.cell(text(content, fill: luma(60%)), fill: luma(95%))
#let other_weekend(content) = table.cell(text(content, fill: luma(60%)), fill: luma(90%))

#set text(size: 18pt)

#text(size: 12pt, weight: "regular")[#generated_at]

#table(
  columns: (1fr, 1fr, 1fr, 1fr, 1fr, 1fr, 1fr),
  align: center,
  inset: (left: 2pt, right: 2pt, top: 20pt, bottom: 20pt),
  stroke: luma(50%),
  fill: luma(90%),
  <%= Enum.map(@calendar, fn 
     {:today, day} -> "today()[#{day}],"
     {:weekday, day} -> "weekday()[#{day}],"
     {:weekend, day} -> "weekend()[#{day}],"
     {:other_weekday, day} -> "other_weekday()[#{day}],"
     {:other_weekend, day} -> "other_weekend()[#{day}],"
  end) %>
)
